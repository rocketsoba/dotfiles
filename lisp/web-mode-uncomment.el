(defun web-mode-uncomment (pos)
  (let ((beg pos) (end pos) (sub2 "") (sub3 "") comment boundaries)
    (save-excursion
      (cond
       ((and (get-text-property pos 'block-side)
             (intern-soft (concat "web-mode-uncomment-" web-mode-engine "-block")))
        (funcall (intern (concat "web-mode-uncomment-" web-mode-engine "-block")) pos))
       ((and (setq boundaries (web-mode-comment-boundaries pos))
             (setq beg (car boundaries))
             (setq end (1+ (cdr boundaries)))
             (> (- end beg) 4))
        (when (and (eq (get-text-property beg 'part-token) 'comment)
                   (> beg 1) ;#1158
                   (get-text-property (1- beg) 'jsx-beg))
          (setq beg (1- beg)
                end (1+ end)))
        (setq comment (buffer-substring-no-properties beg end))
        (setq sub2 (substring comment 0 2))
        (cond
         ((member sub2 '("<!" "<%"))
          (setq comment (replace-regexp-in-string "\\(^<[!%]--[ ]?\\|[ ]?--[%]?>$\\)" "" comment)))
         ((string= sub2 "{#")
          (setq comment (replace-regexp-in-string "\\(^{#[ ]?\\|[ ]?#}$\\)" "" comment)))
         ((string= sub2 "{/") ;jsx comments
          (setq comment (replace-regexp-in-string "\\(^{/\\*[ ]?\\|[ ]?\\*/}$\\)" "" comment)))
         ((string= sub2 "/*")
          (setq sub3 (substring comment 0 3))
          ;; (message "%S" comment)
          (when (string= sub3 "/**")
            (setq comment (replace-regexp-in-string "\\(^/\\*\\*\n\\)" "" comment))
            (setq comment (replace-regexp-in-string "\\(^[ \t]*\\*/\n\\)" "" comment))
            )
          ;;(message "%S" comment)
          ;;(setq comment (replace-regexp-in-string "\\(\\*/\\|^/\\*[ ]?\\|^[ \t]*\\*\\)" "" comment))
          (setq comment (replace-regexp-in-string "\\([ ]?\\*/$\\|^/\\*[ ]?\\)" "" comment))
          (setq comment (replace-regexp-in-string "\\(^[ \t]*\\*\\)" "" comment))
          ;;(message "%S" comment)
          )
         ((string= sub2 "''")
          (setq comment (replace-regexp-in-string "''" "" comment)))
         ((string= sub2 "//")
          (setq comment (replace-regexp-in-string "^ *//" "" comment)))
         ) ;cond
        (delete-region beg end)
        (web-mode-insert-and-indent comment)
        (goto-char beg)
        )
       ) ;cond
      (indent-according-to-mode)
      )))
